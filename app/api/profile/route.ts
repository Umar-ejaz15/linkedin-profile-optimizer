// import { NextResponse } from "next/server";
// import { GoogleGenAI } from "@google/genai";

// export const runtime = "nodejs";

// export async function POST(req: Request): Promise<NextResponse> {
//   try {
//     if (!process.env.GOOGLE_API_KEY) {
//       throw new Error("GOOGLE_API_KEY is not configured.");
//     }

//     const formData = await req.formData();
//     const gender = formData.get("gender") as string | null;
//     const colorScheme = formData.get("colorScheme") as string | null;
//     const file = formData.get("profilePic") as File | null;

//     if (!gender || !colorScheme || !file) {
//       return NextResponse.json(
//         { error: "Missing required fields (gender, colorScheme, or profilePic)" },
//         { status: 400 }
//       );
//     }

//     const validMimeTypes = ["image/png", "image/jpeg"];
//     if (!validMimeTypes.includes(file.type)) {
//       return NextResponse.json(
//         { error: "Invalid file type. Only PNG and JPEG are supported." },
//         { status: 400 }
//       );
//     }

//     const validGenders = ["male", "female", "non-binary", "other"];
//     const validColorSchemes = ["neutral", "warm", "cool", "monochrome"];
//     if (!validGenders.includes(gender.toLowerCase())) {
//       return NextResponse.json(
//         { error: `Invalid gender. Must be one of: ${validGenders.join(", ")}` },
//         { status: 400 }
//       );
//     }
//     if (!validColorSchemes.includes(colorScheme.toLowerCase())) {
//       return NextResponse.json(
//         { error: `Invalid color scheme. Must be one of: ${validColorSchemes.join(", ")}` },
//         { status: 400 }
//       );
//     }

//     // Convert uploaded image to base64
//     const arrayBuffer = await file.arrayBuffer();
//     const imageBase64 = Buffer.from(arrayBuffer).toString("base64");

//     // Initialize Google GenAI client
//     const ai = new GoogleGenAI({ apiKey: process.env.GOOGLE_API_KEY });

//     // Build prompt
//     const prompt = `
//       Enhance this uploaded image into a professional LinkedIn-style headshot.
//       Keep it realistic with subtle ${colorScheme.toLowerCase()} tones.
//       Subject gender: ${gender.toLowerCase()}.
//     `;

//     // Generate image
//     const response = await ai.models.generateImages({
//       model: "imagen-4.0-generate-001",
//       prompt,
//       // Optionally, include the uploaded image as reference
//       inputImage: {
//         image: imageBase64,
//         mimeType: file.type,
//       },
//       config: {
//         numberOfImages: 1,
//       },
//     });

//     const generatedImage = response.generatedImages?.[0];
//     if (!generatedImage) {
//       throw new Error("No image generated by Google GenAI.");
//     }

//     const imgBytes = generatedImage.image.imageBytes;
//     const imageUrl = `data:image/png;base64,${imgBytes}`;

//     return NextResponse.json({
//       resultText: "âœ… Professional headshot generated successfully!",
//       imageUrl,
//     });
//   } catch (err) {
//     console.error("Image generation error:", {
//       message: err instanceof Error ? err.message : String(err),
//       stack: err instanceof Error ? err.stack : undefined,
//       timestamp: new Date().toISOString(),
//     });

//     return NextResponse.json(
//       { error: err instanceof Error ? err.message : "Failed to generate image." },
//       { status: 500 }
//     );
//   }
// }
